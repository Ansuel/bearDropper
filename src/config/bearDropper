#
# bearDropper config - https://github.com/robzr/bearDropper
#
# All time values can use BIND time strings, like 1h30m for 1 hour 30 minutes; valid 
# types are (w)eek (d)ay (h)our (m)inutes (s)econds.  Unitless numbers are seconds.
#
config bearDropper
  # mode used if no mode is specified on command line; see bearDropper -h for help.
  	option	defaultMode 		entire

  # failure attempts from a given IP required to trigger a ban
  	option	attemptCount 		10

  # time period during which attemptCount must be exceeded in order to trigger a ban
  	option	attemptPeriod 		12h

  # how long a ban exist once the attempt threshold is exceeded
  	option 	banLength 		1w

  # log level, 0=silent 1=default 2=verbose 3=debug
  	option 	logLevel 		1

  # logger facility/priority - use stdout or stderr to bypass logger (syslog)
  	option	logFacility 		authpriv.notice

  # How often to write to persistent state file. -1 is never, 0 is on program
  # exit, and a time string can be used to specify minimum interval between writes
  # for periodic saving while in follow mode.  Consider flash storage wear & tear
  # when setting this.  Disabled by default, uncomment for daily writes.
  #	option	persistentStateWritePeriod	1d

  # used bddbz for compressed or bddb for plaintext state files
  	option	fileStateType		bddb	

  # temporary state file prefix, ".$fileStateType" (.bddb or .bddbz) will be appended
  	option	fileStateTempPrefix 	/tmp/bearDropper

  # persistent state file prefix 
  	option	fileStatePersistPrefix 	/etc/bearDropper

  # firewall chain to hook the chain containing ban rules into
  # TBD: convert to list (?) for adding to forward rule
  	option	firewallHookChain 	input_wan_rule

  # position in firewall hook chain (-1 = don't add, 0 = append, 1+ = absolute position)
  	option	firewallHookPosition 	1

  # target used for banned IPs - consider TARPIT/DELUDE
  	option	firewallTarget		DROP


  # whitelist entries do not work yet; as a temporary workaround, put in a firewall rule upstream
  #
  #	list	whitelist		10.0.1.7
  #	list	whitelist		10.0.1.0/24
  #	list	whitelist		192.168.1.0/24
